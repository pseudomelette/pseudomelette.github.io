{"version":3,"file":"component---src-templates-docs-js-content-file-path-src-docs-saga-eb-data-battle-ranks-mdx-efe4fcb9aff2f1e864a5.js","mappings":"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","sources":["webpack://pomelette-nest/./src/data/saga-eb/export/battle-rank-data.js","webpack://pomelette-nest/./src/docs/saga-eb/data/battle-ranks.mdx","webpack://pomelette-nest/./src/templates/docs.js"],"sourcesContent":["import * as React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\n\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\n\nimport {\n  StyledTableContainer,\n  StyledTd,\n  StyledTh,\n  StyledTrh,\n  StyledTrTwoToneB,\n  StyledTrTwoToneR,\n} from '../../../components/saga-eb/layout'\n\nexport const BattleRankData = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allSagaebEnemyRankDataCsv {\n        nodes {\n          label\n          Attack\n          SkillLv\n          Defense\n          HP\n          Parameter\n          growRank\n        }\n      }\n    }\n  `)\n  const nodes = data.allSagaebEnemyRankDataCsv.nodes\n\n  return(\n    <StyledTableContainer align='center'>\n      <Table stickyHeader sx={{ width: `calc(80px * 7)`, tableLayout: 'fixed' }}>\n        <TableHead>\n          <TableRow>\n            <StyledTh align='center' sx={{ position: 'sticky', left: 0, zIndex: 3 }}>バトル<br/>ランク</StyledTh>\n            <StyledTh align='center'>武器威力</StyledTh>\n            <StyledTh align='center'>スキル<br/>レベル</StyledTh>\n            <StyledTh align='center'>基礎<br/>属性耐性</StyledTh>\n            <StyledTh align='center'>基礎HP</StyledTh>\n            <StyledTh align='center'>基礎<br/>能力値</StyledTh>\n            <StyledTh align='center'>成長<br/>ランク</StyledTh>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {nodes.map((node, index) => {\n            if (Number(node.label.split('_')[1]) > 200) {\n              return (\n                <StyledTrTwoToneR className={index % 2 === 0 ? 'darker-row-w-header' : 'lighter-row-w-header'} key={index}>\n                  <StyledTrh align='center' scope='row'>{Number(node.label.split('_')[1])}</StyledTrh>\n                  <StyledTd align='center'>{node.Attack}</StyledTd>\n                  <StyledTd align='center'>{Number(node.SkillLv)}</StyledTd>\n                  <StyledTd align='center'>{node.Defense}</StyledTd>\n                  <StyledTd align='center'>{node.HP}</StyledTd>\n                  <StyledTd align='center'>{node.Parameter}</StyledTd>\n                  <StyledTd align='center'>{node.growRank}</StyledTd>\n                </StyledTrTwoToneR>\n              )\n            } else {\n              return (\n                <StyledTrTwoToneB className={index % 2 === 0 ? 'darker-row-w-header' : 'lighter-row-w-header'} key={index}>\n                  <StyledTrh align='center' scope='row'>{Number(node.label.split('_')[1])}</StyledTrh>\n                  <StyledTd align='center'>{node.Attack}</StyledTd>\n                  <StyledTd align='center'>{Number(node.SkillLv)}</StyledTd>\n                  <StyledTd align='center'>{node.Defense}</StyledTd>\n                  <StyledTd align='center'>{node.HP}</StyledTd>\n                  <StyledTd align='center'>{node.Parameter}</StyledTd>\n                  <StyledTd align='center'>{node.growRank}</StyledTd>\n                </StyledTrTwoToneB>\n              )\n            }\n          })}\n        </TableBody>\n      </Table>\n    </StyledTableContainer>\n  )\n}\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport {Link} from 'gatsby';\nimport Box from '@mui/material/Box';\nimport {BattleRankData} from '../../../data/saga-eb/export/battle-rank-data';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"テーブルデータ\"), \"\\n\", React.createElement(Box, null, React.createElement(_components.p, null, \"バトルランクに紐づく内部値のデータは下表の通りです。\"), React.createElement(BattleRankData)), \"\\n\", React.createElement(_components.h1, null, \"データの見方\"), \"\\n\", React.createElement(Box, {\n    sx: {\n      minHeight: {\n        xs: `calc(100dvh - 64px - 8px - 50px - 24px - 80px)`,\n        sm: `calc(100dvh - 48px - 8px - 54px - 24px - 80px)`\n      }\n    }\n  }, React.createElement(_components.p, null, \"テーブルを構成するデータ系列について説明します。\"), React.createElement(Box, {\n    sx: {\n      ml: 2,\n      my: 3\n    }\n  }, React.createElement(_components.h2, null, \"バトルランク\"), React.createElement(_components.p, null, \"テーブルデータのキーに相当します。\"), React.createElement(_components.p, null, \"パーティ加入時ステータス、せんせいの修行におけるステータス成長上限の算出では現在バトルランク（1～200）が参照されます。それ以外の目的では敵バトルランク（1～250）が参照されます。\"), React.createElement(_components.p, null, \"バトルランクの詳細については \", React.createElement(Link, {\n    to: '/saga-eb/logic/battle-ranks/'\n  }, \"ロジック ＞ バトルランク\"), \" を参照してください。\"), React.createElement(_components.h2, null, \"武器威力\"), React.createElement(_components.p, null, \"敵の武器威力です。\"), React.createElement(_components.p, null, \"唯一の例外（憤怒の塔主［7］）を除き、全ての敵キャラクターにとって味方の武器威力と同等の役割を果たします。\"), React.createElement(_components.h2, null, \"スキルレベル\"), React.createElement(_components.p, null, \"敵のスキルレベルです。\"), React.createElement(_components.p, null, \"味方のスキルレベルと同等の役割を果たします。\"), React.createElement(_components.h2, null, \"基礎属性耐性\"), React.createElement(_components.p, null, \"敵の各種属性耐性の基礎となる内部値です。\"), React.createElement(_components.p, null, \"敵種族に設定されている属性耐性（種族属性耐性）、敵キャラクターに設定されている属性耐性（固有属性耐性）との組み合わせによって最終的な属性耐性が決定されます。\"), React.createElement(_components.h2, null, \"基礎HP\"), React.createElement(_components.p, null, \"敵の最大HPの基礎となる内部値です。\"), React.createElement(_components.p, null, \"敵キャラクターに設定されている最大HP（固有HP）との組み合わせによって最終的な最大HPが決定されます。\"), React.createElement(_components.h2, null, \"基礎能力値\"), React.createElement(_components.p, null, \"敵の各種能力値の基礎となる内部値です。\"), React.createElement(_components.p, null, \"敵キャラクターに設定されている能力値（固有能力値）との組み合わせによって最終的な能力値が決定されます。\"), React.createElement(_components.h2, null, \"成長ランク\"), React.createElement(_components.p, null, \"パーティ加入時ステータス、ステータス成長上限に影響する内部値です。\"), React.createElement(_components.p, null, \"バトル勝利におけるステータス成長上限の算出では味方キャラクターに設定されている成長適正との組み合わせによって最終的な成長上限が決定されます。\"))));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/Carbon/work/repo/site/pseudomelette.github.io/notebook/src/docs/saga-eb/data/battle-ranks.mdx\";\nimport * as React from 'react';\nimport {graphql} from 'gatsby';\nimport {SagaEbTemplate, SagaEbHead} from '../components/saga-eb/main';\nexport const PageTemplate = ({data, children, pageContext}) => {\n  switch (pageContext.layout) {\n    case 'saga-eb':\n      return React.createElement(SagaEbTemplate, {\n        data: data\n      }, children);\n    default:\n      return React.createElement(React.Fragment, null, children);\n  }\n};\nexport const Head = ({data, pageContext}) => {\n  switch (pageContext.layout) {\n    case 'saga-eb':\n      return React.createElement(SagaEbHead, {\n        data: data\n      });\n    default:\n      return React.createElement(React.Fragment);\n  }\n};\nexport const query = graphql`\n  query($slug: String!) {\n    mdx(frontmatter: { slug: {eq: $slug } }) {\n      frontmatter {\n        title\n        subtitle\n        slug\n        description\n      }\n      tableOfContents(maxDepth: 2)\n    }\n  }\n`;\nPageTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PageTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["BattleRankData","nodes","useStaticQuery","allSagaebEnemyRankDataCsv","align","Table","stickyHeader","sx","width","tableLayout","TableHead","TableRow","position","left","zIndex","TableBody","map","node","index","Number","label","split","className","key","scope","Attack","SkillLv","Defense","HP","Parameter","growRank","_createMdxContent","props","_components","Object","assign","h1","p","h2","_provideComponents","components","React","Box","minHeight","xs","sm","ml","my","Link","to","wrapper","MDXLayout","PageTemplate","_ref","data","children","pageContext","layout","SagaEbTemplate","Head","_ref2","SagaEbHead","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}