{"version":3,"file":"component---src-templates-docs-js-content-file-path-src-docs-saga-eb-data-battle-ranks-mdx-9899428fac77c1520e5f.js","mappings":"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","sources":["webpack://pomelette-nest/./src/data/saga-eb/export/battle-rank-data.js","webpack://pomelette-nest/./src/docs/saga-eb/data/battle-ranks.mdx","webpack://pomelette-nest/./src/templates/docs.js"],"sourcesContent":["import * as React from 'react'\r\nimport { graphql, useStaticQuery } from 'gatsby'\r\n\r\nimport Table from '@mui/material/Table'\r\nimport TableBody from '@mui/material/TableBody'\r\nimport TableHead from '@mui/material/TableHead'\r\nimport TableRow from '@mui/material/TableRow'\r\n\r\nimport {\r\n\tStyledTableContainer,\r\n\tStyledTd,\r\n\tStyledTh,\r\n\tStyledTrh,\r\n\tStyledTrStripedR,\r\n\tStyledTrStripedB,\r\n} from '../../../components/saga-eb/layout'\r\n\r\nexport const BattleRankData = () => {\r\n\tconst data = useStaticQuery(graphql`\r\n\t\tquery {\r\n\t\t\tallSagaebEnemyRankDataCsv {\r\n\t\t\t\tnodes {\r\n\t\t\t\t\tlabel\r\n\t\t\t\t\tAttack\r\n\t\t\t\t\tSkillLv\r\n\t\t\t\t\tDefense\r\n\t\t\t\t\tHP\r\n\t\t\t\t\tParameter\r\n\t\t\t\t\tgrowRank\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t`)\r\n  const nodes = data.allSagaebEnemyRankDataCsv.nodes\r\n\r\n  return(\r\n    <StyledTableContainer align='center'>\r\n      <Table stickyHeader sx={{ width: `calc(80px * 7)`, tableLayout: 'fixed' }}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTh align='center' sx={{ position: 'sticky', left: 0, zIndex: 3 }}>バトル<br/>ランク</StyledTh>\r\n            <StyledTh align='center'>武器威力</StyledTh>\r\n            <StyledTh align='center'>スキル<br/>レベル</StyledTh>\r\n            <StyledTh align='center'>基礎<br/>属性耐性</StyledTh>\r\n            <StyledTh align='center'>基礎HP</StyledTh>\r\n            <StyledTh align='center'>基礎<br/>能力値</StyledTh>\r\n            <StyledTh align='center'>成長<br/>ランク</StyledTh>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {nodes.map(node => {\r\n\t\t\t\t\t\tif (Number(node.label.split('_')[1]) > 200) {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<StyledTrStripedR>\r\n\t\t\t\t\t\t\t\t\t<StyledTrh align='center' scope='row'>{Number(node.label.split('_')[1])}</StyledTrh>\r\n\t\t\t\t\t\t\t\t\t<StyledTd align='center'>{node.Attack}</StyledTd>\r\n\t\t\t\t\t\t\t\t\t<StyledTd align='center'>{Number(node.SkillLv)}</StyledTd>\r\n\t\t\t\t\t\t\t\t\t<StyledTd align='center'>{node.Defense}</StyledTd>\r\n\t\t\t\t\t\t\t\t\t<StyledTd align='center'>{node.HP}</StyledTd>\r\n\t\t\t\t\t\t\t\t\t<StyledTd align='center'>{node.Parameter}</StyledTd>\r\n\t\t\t\t\t\t\t\t\t<StyledTd align='center'>{node.growRank}</StyledTd>\r\n\t\t\t\t\t\t\t\t</StyledTrStripedR>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<StyledTrStripedB>\r\n\t\t\t\t\t\t\t\t\t<StyledTrh align='center' scope='row'>{Number(node.label.split('_')[1])}</StyledTrh>\r\n\t\t\t\t\t\t\t\t\t<StyledTd align='center'>{node.Attack}</StyledTd>\r\n\t\t\t\t\t\t\t\t\t<StyledTd align='center'>{Number(node.SkillLv)}</StyledTd>\r\n\t\t\t\t\t\t\t\t\t<StyledTd align='center'>{node.Defense}</StyledTd>\r\n\t\t\t\t\t\t\t\t\t<StyledTd align='center'>{node.HP}</StyledTd>\r\n\t\t\t\t\t\t\t\t\t<StyledTd align='center'>{node.Parameter}</StyledTd>\r\n\t\t\t\t\t\t\t\t\t<StyledTd align='center'>{node.growRank}</StyledTd>\r\n\t\t\t\t\t\t\t\t</StyledTrStripedB>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </StyledTableContainer>\r\n  )\r\n}\r\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport Box from '@mui/material/Box';\nimport {BattleRankData} from '../../../data/saga-eb/export/battle-rank-data';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"テーブルデータ\"), \"\\n\", React.createElement(Box, null, React.createElement(_components.p, null, \"バトルランクに紐づく内部値のデータは下表の通りです。\"), React.createElement(BattleRankData)), \"\\n\", React.createElement(_components.h1, null, \"データの見方\"), \"\\n\", React.createElement(Box, {\n    sx: {\n      minHeight: {\n        xs: `calc(100dvh - 64px - 8px - 50px - 24px - 80px)`,\n        sm: `calc(100dvh - 48px - 8px - 54px - 24px - 80px)`\n      }\n    }\n  }, React.createElement(_components.p, null, \"テーブルを構成するデータ系列について説明します。\"), React.createElement(Box, {\n    sx: {\n      ml: 2,\n      my: 3\n    }\n  }, React.createElement(_components.h2, null, \"バトルランク\"), React.createElement(_components.p, null, \"テーブルデータのキーに相当します。\"), React.createElement(_components.p, null, \"パーティ加入時ステータス、せんせいの修行におけるステータス成長上限の算出では現在バトルランク（1～200）が参照されます。それ以外の目的では敵バトルランク（1～250）が参照されます。\"), React.createElement(_components.p, null, \"バトルランクの詳細については \", React.createElement(_components.a, {\n    href: \"/saga-eb/logic/battle-ranks\"\n  }, \"ロジック ＞ バトルランク\"), \" を参照してください。\"), React.createElement(_components.h2, null, \"武器威力\"), React.createElement(_components.p, null, \"敵の武器威力です。\"), React.createElement(_components.p, null, \"唯一の例外を除き、ほぼ全ての敵キャラクターにとって味方の武器威力と同等の役割を果たします。\"), React.createElement(_components.h2, null, \"スキルレベル\"), React.createElement(_components.p, null, \"敵のスキルレベルです。\"), React.createElement(_components.p, null, \"味方のスキルレベルと同等の役割を果たします。\"), React.createElement(_components.h2, null, \"基礎属性耐性\"), React.createElement(_components.p, null, \"敵の各種属性耐性の基礎となる内部値です。\"), React.createElement(_components.p, null, \"敵種族に設定されている属性耐性（種族属性耐性）、敵キャラクターに設定されている属性耐性（固有属性耐性）との組み合わせによって最終的な属性耐性が決定されます。\"), React.createElement(_components.h2, null, \"基礎HP\"), React.createElement(_components.p, null, \"敵の最大HPの基礎となる内部値です。\"), React.createElement(_components.p, null, \"敵キャラクターに設定されている最大HP（固有最大HP）との組み合わせによって最終的な最大HPが決定されます。\"), React.createElement(_components.h2, null, \"基礎能力値\"), React.createElement(_components.p, null, \"敵の各種能力値の基礎となる内部値です。\"), React.createElement(_components.p, null, \"敵キャラクターに設定されている能力値（固有能力値）との組み合わせによって最終的な能力値が決定されます。\"), React.createElement(_components.h2, null, \"成長ランク\"), React.createElement(_components.p, null, \"パーティ加入時ステータス、ステータス成長上限に影響する内部値です。\"), React.createElement(_components.p, null, \"バトル勝利におけるステータス成長上限の算出では味方キャラクターに設定されている成長適正との組み合わせによって最終的な成長上限が決定されます。\"))));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"C:/Users/romeo/work/repo/pseudomelette.github.io/notebook/src/docs/saga-eb/data/battle-ranks.mdx\";\nimport * as React from 'react';\nimport {graphql} from 'gatsby';\nimport {SagaEbTemplate, SagaEbHead} from '../components/saga-eb/main';\nexport const PageTemplate = ({data, children, pageContext}) => {\n  switch (pageContext.layout) {\n    case 'saga-eb':\n      return React.createElement(SagaEbTemplate, {\n        data: data\n      }, children);\n    default:\n      return React.createElement(React.Fragment, null, children);\n  }\n};\nexport const Head = ({data, pageContext}) => {\n  switch (pageContext.layout) {\n    case 'saga-eb':\n      return React.createElement(SagaEbHead, {\n        data: data\n      });\n    default:\n      return React.createElement(React.Fragment);\n  }\n};\nexport const query = graphql`\n  query($slug: String!) {\n    mdx(frontmatter: { slug: {eq: $slug } }) {\n      frontmatter {\n        title\n        subtitle\n        slug\n        description\n      }\n      tableOfContents(maxDepth: 2)\n    }\n  }\n`;\nPageTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PageTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["BattleRankData","nodes","useStaticQuery","allSagaebEnemyRankDataCsv","align","Table","stickyHeader","sx","width","tableLayout","TableHead","TableRow","position","left","zIndex","TableBody","map","node","Number","label","split","scope","Attack","SkillLv","Defense","HP","Parameter","growRank","_createMdxContent","props","_components","Object","assign","h1","p","h2","a","_provideComponents","components","React","Box","minHeight","xs","sm","ml","my","href","wrapper","MDXLayout","PageTemplate","_ref","data","children","pageContext","layout","SagaEbTemplate","Head","_ref2","SagaEbHead","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}